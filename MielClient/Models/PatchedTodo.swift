//
// PatchedTodo.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PatchedTodo: Codable, JSONEncodable, Hashable {

    public var id: Int?
    public var user: String?
    public var task: String?
    public var dueDate: Date?
    public var isComplete: Bool?
    public var isDeleted: Bool?
    public var createdAt: Date?

    public init(id: Int? = nil, user: String? = nil, task: String? = nil, dueDate: Date? = nil, isComplete: Bool? = nil, isDeleted: Bool? = nil, createdAt: Date? = nil) {
        self.id = id
        self.user = user
        self.task = task
        self.dueDate = dueDate
        self.isComplete = isComplete
        self.isDeleted = isDeleted
        self.createdAt = createdAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case user
        case task
        case dueDate = "due_date"
        case isComplete = "is_complete"
        case isDeleted = "is_deleted"
        case createdAt = "created_at"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(user, forKey: .user)
        try container.encodeIfPresent(task, forKey: .task)
        try container.encodeIfPresent(dueDate, forKey: .dueDate)
        try container.encodeIfPresent(isComplete, forKey: .isComplete)
        try container.encodeIfPresent(isDeleted, forKey: .isDeleted)
        try container.encodeIfPresent(createdAt, forKey: .createdAt)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension PatchedTodo: Identifiable {}
